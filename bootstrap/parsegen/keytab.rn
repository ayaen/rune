//  Copyright 2023 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

use sym

class Keytab(self) {
  func lookup(self, name: string) -> Keyword? {
    return self.findKeyword(Sym.new(name))
  }
}

class Keyword(self, keytab: Keytab, name: string) {
  self.sym = Sym.new(name)
  keytab.insertKeyword(self)
}

relation Hashed Keytab Keyword cascade ("sym")

// Type hint.
if false {
  keytab = Keytab()
  Keyword(keytab, ":")
}

unittest constructorTest {
  keytab = Keytab()
  Keyword(keytab, ":")
  Keyword(keytab, "|")
  Keyword(keytab, ";")
  assert isnull(keytab.lookup("\n"))
  assert !isnull(keytab.lookup(":"))
  assert !isnull(keytab.lookup("|"))
  assert !isnull(keytab.lookup(";"))
  println "passed"
}
