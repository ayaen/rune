goal: "a" E "c" | "a" F "d" | "b" F "c" | "b" E "d"
E: "e"
F: "e"

goal: emptyInitializer (operatorExample | builtin)*
emptyInitializer: EMPTY
builtin: IDENT | INTEGER | FLOAT | STRING | RANDUINT | INTTYPE | UINTTYPE
operatorExample: "a"* "b" | "c"+ | "d" "e"? | "if" &"then" | "if" !"else"

passed parseExampleRulesTest
passed parseRuneRulesTest
passed parseFactorialFunctionTest
/third_party/rune/bootstrap/parse/testdata/syntaxError.rn:18: Syntax error
 . }
 ^
passed parseSyntaxErrorTest
(
  exprStatement(
    expr(exit "("
      expr(1i32) ")")) EOF)
passed reuseParseResultTest
(((1 "+" 2) "+" 3) EOF)
passed testLeftRecursion
(
  assignmentStatement(
    expr(x) "="
    expr((a "||" b) "||" c))
  assignmentStatement(
    expr(x) "="
    expr((a "^^" b) "^^" c))
  assignmentStatement(
    expr(x) "="
    expr((a "&&" b) "&&" c))
  assignmentStatement(
    expr(x) "="
    expr((a "|" b) "|" c))
  assignmentStatement(
    expr(x) "="
    expr((a "+" b) "+" c))
  assignmentStatement(
    expr(x) "="
    expr((a "*" b) "*" c))
  assignmentStatement(
    expr(x) "="
    expr(a "**" (b "**" c)))
  assignmentStatement(
    expr(x) "="
    expr((a "." b) "." c)) EOF)
passed testRuneLeftRecursion
