goal: "a" E "c" | "a" F "d" | "b" F "c" | "b" E "d"
E: "e"
F: "e"

goal: emptyInitializer (operatorExample | builtin)*
emptyInitializer: EMPTY
builtin: IDENT | INTEGER | FLOAT | STRING | RANDUINT | INTTYPE | UINTTYPE
operatorExample: "a"* "b" | "c"+ | "d" "e"? | "if" &"then" | "if" !"else"

passed parseExampleRulesTest
passed parseRuneRulesTest
passed parseFactorialFunctionTest
testdata/syntaxError.rn:18: Syntax error
 . }
 ^
passed parseSyntaxErrorTest

goal(
  exprStatement(
    postfixExpr(exit
      callParameters(1i32))) EOF)
passed reuseParseResultTest

goal(
  expr(
    expr(1 "+" 2) "+" 3) EOF)
passed testLeftRecursion

goal(
  assignmentExpr(x "="
    orExpr(
      orExpr(a "||" b) "||" c))
  assignmentExpr(x "="
    xorExpr(
      xorExpr(a "^^" b) "^^" c))
  assignmentExpr(x "="
    andExpr(
      andExpr(a "&&" b) "&&" c))
  assignmentExpr(x "="
    bitorExpr(
      bitorExpr(a "|" b) "|" c))
  assignmentExpr(x "="
    addExpr(
      addExpr(a "+" b) "+" c))
  assignmentExpr(x "="
    mulExpr(
      mulExpr(a "*" b) "*" c))
  assignmentExpr(x "="
    exponentiateExpr(a
      exponentiateExpr(b c)))
  assignmentExpr(x "="
    postfixExpr(
      postfixExpr(a "." b) "." c)) EOF)
passed testRuneLeftRecursion
