//  Copyright 2023 Google LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

class Foo(self, value: u100) {
  self.value = value

  operator *(self: Foo, other: Foo) -> Foo {
    return Foo(self.value * other.value)
  }

  operator -(self: Foo, other: Foo) -> Foo {
    return Foo(self.value - other.value)
  }

  operator <>(self: Foo, other) -> Foo {
    typeswitch other {
      Foo  => return other
      Int | Uint => return Foo(<u100> other)
      default => raise Status.InvalidArgument, "Can't convert ", other, " to Foo"
    }
  }

  operator ==(self: Foo, other: Foo) -> bool {
    return self.value == other.value
  }
}

func fact(n) {
  if n == <n>0 {
    return <n>1
  }
  return n * fact(n - <n>1)
}

println fact(6)
println fact(Foo(6u100))
